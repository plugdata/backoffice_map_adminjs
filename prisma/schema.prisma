// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  username          String    @unique
  password          String
  title_use         String
  fullName          String
  address           String?
  position          String?
  email             String?   @unique
  phone             String?
  role              String
  resetToken        String?
  resetTokenExpiry  DateTime?
  createdAt         DateTime  @default(now())
  owners            Owner[]
}

model Owner {
  id          Int      @id @default(autoincrement())
  title_owner String
  first_name  String
  last_name   String
  phone       String?
  no_id       String?
  road        String?
  subdistrict String?
  district    String?
  province    String?
  postcode    Int?
  org_name    String?
  org_address String?
  user_id     Int?
  owner_type  String?
  created_at  DateTime @default(now())
  number_no   String?  @unique
  user        User?    @relation(fields: [user_id], references: [id])
}

model FiscalYear {
  id          Int          @id @default(autoincrement())
  year        Int
  detail      String?
  createdAt   DateTime     @default(now())
}

model BuildingControl {
  id             Int       @id @default(autoincrement())
  building_type  String?
  use_purpose    String?
  quantity       Int?
  fiscalYearId   Int
  owner_id       Int?
  createdAt      DateTime  @default(now())
  status         String?
  date           DateTime?
  license_number String?
  maps           Map?
  uploads        Uploads[] @relation("BuildingControlUploads")

  @@index([fiscalYearId])
  @@index([owner_id])
}

model RiskZone {
  id           Int        @id @default(autoincrement())
  zoneType     String
  description  String?
  fiscalYearId Int
  owner_id     Int
  createdAt    DateTime   @default(now())
  maps         Map?
  uploads      Uploads[]  @relation("RiskZoneUploads")

  @@index([fiscalYearId])
  @@index([owner_id])
}

model ZoningPlan {
  id           Int        @id @default(autoincrement())
  areaName     String
  notes        String?
  fiscalYearId Int
  owner_id     Int
  createdAt    DateTime   @default(now())
  maps         Map?
  uploads      Uploads[]  @relation("ZoningPlanUploads")

  @@index([fiscalYearId])
  @@index([owner_id])
}

 // PlanProject and ApprovedProject
model PlanProject {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  name       String
  category   String?
  startDate  DateTime?
  endDate    DateTime?
  supervisor String?
  budget     Float?
  fiscalYearId Int?
  status     String?
  documentCount Int?
  details    String?
}

model ApprovedProject {
  id         Int      @id @default(autoincrement())
  title_project  String   @default("ยังไม่ระบุ")
  category       String?
  supervisor String?
  budget     Float?
  fiscalYearId Int?
  status     String?
  documentCount Int?
  details    String?
  createdAt  DateTime @default(now())
}

model Uploads {
  id                Int               @id @default(autoincrement())
  namefile          String
  url               String?
  fileType          String?
  size              Int?
  token             String            @unique @default(uuid())
  createdAt         DateTime          @default(now())
  uploadedBy        Int?
  buildingControlId Int?
  riskZoneId        Int?
  zoningPlanId      Int?
  buildingControls  BuildingControl[] @relation("BuildingControlUploads")
  riskZones         RiskZone[]        @relation("RiskZoneUploads")
  zoningPlans       ZoningPlan[]      @relation("ZoningPlanUploads")
  maps              Map[]             @relation("MapUploads")
}

model Map {
  id                Int              @id @default(autoincrement())
  buildingControlId Int?             @unique
  riskZoneId        Int?             @unique
  zoningPlanId      Int?             @unique
  name_local        String?
  house_no          String?
  address           String?
  latitude          Float?
  longitude         Float?
  colors            String?
  data              Json?
  geom Unsupported("geometry")?

  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  buildingControl   BuildingControl? @relation(fields: [buildingControlId], references: [id])
  riskZone          RiskZone?        @relation(fields: [riskZoneId], references: [id])
  zoningPlan        ZoningPlan?      @relation(fields: [zoningPlanId], references: [id])
  maps              Uploads[]        @relation("MapUploads")
  @@index([buildingControlId])
  @@index([riskZoneId])
  @@index([zoningPlanId])
}

model districts {
  id             Int      @id @default(autoincrement())
  district_code  String
  province       String
  amphoe         String
  district       String
  zipcode        String
  province_code  String
  amphoe_code    String
}

