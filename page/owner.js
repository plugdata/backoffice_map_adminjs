import titles from './keepdata/titles.js'
import { ValidationError } from "adminjs"
import { createPrismaClient } from '../config/database.js'
const prisma = createPrismaClient()

const validateCitizenId = async (request, context) => {
  const { payload = {}, method } = request

  // validate ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ post (new) ‡∏´‡∏£‡∏∑‡∏≠ put (edit)
  if (method !== "post" && method !== "put") return request

  const { number_no } = payload
  const errors = {}

  // ‡∏î‡∏∂‡∏á id ‡∏Ç‡∏≠‡∏á record ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏¢‡∏π‡πà (‡∏Å‡∏£‡∏ì‡∏µ edit)
  const currentId = context?.record?.params?.id

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤
  if (!number_no || number_no.trim().length === 0) {
    errors.number_no = {
      message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô",
    }
  } else {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏ã‡πâ‡∏≥
    const existingOwner = await prisma.owner.findFirst({
      where: { number_no: number_no },
    })

    if (existingOwner && existingOwner.id !== Number(currentId)) {
      errors.number_no = {
        message: "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
      }
    }
  }

  if (Object.keys(errors).length) {
    throw new ValidationError(errors)
  }

  return request
}


const options_owner = {
    navigation: {
        name: '‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
        icon: 'User',
    },
    properties: {
        title_owner: {
            type: 'text',
            isRequired: true,
              availableValues: titles ,// ‡πÄ‡∏≠‡∏≤ array ‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏£‡∏á ‡πÜ
            props: { placeholder: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤' },
            },
                first_name: {
                    type: 'text',
                    isRequired: true,
                },
                last_name: {
                    type: 'text',
                    isRequired: true,
                },
                number_no:{
                  type:'text',
                  props: { placeholder: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å' ,
                    pattern: '\\d{13}',
                    title: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å'
                  },
                },
                phone: {
                  type: 'string',   // üëâ ‡πÉ‡∏ä‡πâ 'string' ‡∏´‡∏£‡∏∑‡∏≠ 'text' ‡∏Å‡πá‡πÑ‡∏î‡πâ (AdminJS ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö type string ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö field input)
                  isRequired: true,
                  props: { 
                    placeholder: '‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 8‚Äì10 ‡∏´‡∏•‡∏±‡∏Å',
                    pattern: '^\\d{8,10}$', // üëà regex ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á
                    title: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå 8‚Äì10 ‡∏´‡∏•‡∏±‡∏Å'
                  },
                },
                no_id: {
                    type: 'number',
                    isRequired: true,
                    props: { placeholder: '‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç' },
                },
                road: {
                    type: 'text',
                  
                },
                subdistrict: {
                    type: 'text',
                   
                },
                district: {
                    type: 'text',
                    
                },
                province: {
                    type: 'text',
                    
                },
                postcode: {
                    type: 'number',
                },
                org_name: {
                    type: 'text',
                   
                },
                org_address: {
                    type: 'text',            
                },
                
                created_at: {
                    type: 'date',
                    isVisible: false,
                },
  },
  actions: {
    new: {
      before: [validateCitizenId],
      layout: [
        [{ width: 3 / 3, mx: 'auto' }, [
          ['@H3', { children: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á' }],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['title_owner', { flexGrow: 1, pr: 'default' }],
            ['first_name', { flexGrow: 1, pr: 'default' }],
            ['last_name', { flexGrow: 1 }],
          ]],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['number_no', { flexGrow: 1, pr: 'default' }],
            ['phone', { flexGrow: 1, pr: 'default' }],
          
          ]],
          ['@H3', { children: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà' }],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['no_id', { flexGrow: 1, pr: 'default' }],
            ['road', { flexGrow: 1, pr: 'default' }],
            ['subdistrict', { flexGrow: 1, pr: 'default' }],
            
          ]],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['district', { flexGrow: 1, pr: 'default' }],
            ['province', { flexGrow: 1, pr: 'default' }],
            ['postcode', { flexGrow: 1 }],
          ]],
          ['@H3', { children: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£' }],
          'org_name',
          'org_address',
        ]],
      ],
    },
    edit: {
      before: [validateCitizenId],
      layout: [
        [{ width: 3 / 3, mx: 'auto' }, [
          ['@H3', { children: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á' }],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['title_owner', { flexGrow: 1, pr: 'default' }],
            ['first_name', { flexGrow: 1, pr: 'default' }],
            ['last_name', { flexGrow: 1 }],
          ]],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['number_no', { flexGrow: 1, pr: 'default' }],
            ['phone', { flexGrow: 1, pr: 'default' }],
          
          ]],
          ['@H3', { children: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà' }],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['no_id', { flexGrow: 1, pr: 'default' }],
            ['road', { flexGrow: 1, pr: 'default' }],
            ['subdistrict', { flexGrow: 1, pr: 'default' }],
            
          ]],
          [{ flexDirection: 'row', flex: true, gap: 'sm' }, [
            ['district', { flexGrow: 1, pr: 'default' }],
            ['province', { flexGrow: 1, pr: 'default' }],
            ['postcode', { flexGrow: 1 }],
          ]],
          ['@H3', { children: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£' }],
          'org_name',
          'org_address',
        ]],
      ],
    },
    show: { 
      component: 'OwnerShow',
    },
    delete: { isAccessible: true },
  },
}
export default options_owner;